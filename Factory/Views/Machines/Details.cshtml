@{
  Layout = "_Layout";
}

@model Factory.Models.Machine

<div class="jumbotron">
  <h1>Details for @Html.DisplayFor(model => model.Name)</h1>
</div>
<hr />
@if (@Model.Fixed == false)
{
  <h3>@Html.DisplayFor(model => model.Name) is currently broken!</h3>
}
else
{
  <h3>@Html.DisplayFor(model => model.Name) is currently working!</h3>
}
<hr />
<h3>Next Machine Service Date:</h3>
<p>@Html.DisplayFor(model => model.Date.Month)/@Html.DisplayFor(model => model.Date.Day)/@Html.DisplayFor(model => model.Date.Year)</p>
<hr />
@if (@Model.JoinEntities.Count == 0)
{
  <h3>This Machine doesn't have any Engineers assigned to it.</h3>
}
else 
{
  <h3>@Html.DisplayFor(model => model.Name) has @Html.DisplayFor(model => model.JoinEntities.Count) Engineers assigned.</h3>
  <ul>  
    @foreach(var join in Model.JoinEntities)
    {
      <li>@Html.ActionLink(@join.Engineer.Name, "Details", "Engineers", new { id = join.Engineer.EngineerId })</li>
    }
  </ul>
}
<hr />
@if (@Model.JoinEntities.Count == 0)
{
  <h3>No Engineers to Remove from this Machine.</h3>
}
else
{
<h3>Delete Engineer from @Html.DisplayFor(model => model.Name)</h3>
<ul>
  <div class="row">
  @foreach (var join in Model.JoinEntities)
  {
    @using (Html.BeginForm("DeleteEngineer", "Machines"))
    {
      @Html.Hidden("joinId", @join.EngineerMachineId)
      <button class="btn" type="submit">@join.Engineer.Name</button>
    }
  }
  </div>
</ul>
}
<hr />
<button class="btn">@Html.ActionLink("Edit Machine", "Edit", new { id = Model.MachineId })</button>
<button class="btn">@Html.ActionLink("Delete Machine", "Delete", new { id = Model.MachineId })</button>
<button class="btn">@Html.ActionLink("Add Engineer to Machine", "AddEngineer", "Machines", new { id = Model.MachineId })</button>
<hr />